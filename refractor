#!/usr/bin/python
import os
import argparse
import subprocess

from util.general import *

FNULL = open(os.devnull, 'w')

def setup(apk):
    print "================================"
    print "Setting up the Refractor project"
    print "================================"
    project_loc = default_workspace_loc()
    file_name = os.path.basename(apk).split('.')[0]
    project_loc += "/" + file_name
    if not os.path.exists(project_loc):
        os.makedirs(project_loc)
    decompile_loc = project_loc + "/decompiled"
    apktool = get_apktool_loc()
    subprocess.call([apktool, "d", "-o", decompile_loc, "-f", apk], stdout=FNULL, stderr=subprocess.STDOUT)
    print ""
    print 'The project structure for {0} is setup.'.format(os.path.basename(apk))

def commpile(project):
    print 'project loc = {0}'.format(project)

parser = argparse.ArgumentParser(description='Refractor CLI Tool')
subparsers = parser.add_subparsers(dest='sub_command', help='options')

#setup command
setup_parser = subparsers.add_parser('setup', help='Setup the Refractor project')
setup_parser.add_argument('apk', action='store', help='APK to refractor')

#compile command
compile_parser = subparsers.add_parser('compile', help='Compile the project')
compile_parser.add_argument('project_loc', action='store', help='Path of the project to compile')

args = parser.parse_args()

sub_command = args.sub_command

if sub_command == 'setup':
    setup(args.apk)
elif sub_command == 'compile':
    compile(args.project_loc)
else:
    print 'Illegal sub command'
